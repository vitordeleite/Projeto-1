/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package crud.tela;

import crud.dao.ClienteMapDAO;
import crud.dao.IClienteDAO;
import crud.domain.Cliente;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author v
 */
public class Tela extends javax.swing.JFrame {
 private  DefaultTableModel modelo = new  DefaultTableModel();
 private IClienteDAO clienteDAO = new ClienteMapDAO();
    public Tela() {
        initComponents();
        initCustomComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNome = new javax.swing.JLabel();
        txtnome = new javax.swing.JTextField();
        btnSalvar = new javax.swing.JButton();
        lblCpf = new javax.swing.JLabel();
        txtCpf = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaClientes = new javax.swing.JTable();
        lblTel = new javax.swing.JLabel();
        textTel = new javax.swing.JTextField();
        lblnum = new javax.swing.JLabel();
        textnum = new javax.swing.JTextField();
        lblEnd = new javax.swing.JLabel();
        textEnd = new javax.swing.JTextField();
        lblCid = new javax.swing.JLabel();
        textCid = new javax.swing.JTextField();
        lblEst = new javax.swing.JLabel();
        txtEst = new javax.swing.JTextField();
        btnexc = new javax.swing.JButton();
        btnAtulizar = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        opcSair = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblNome.setText("nome:");

        txtnome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnomeActionPerformed(evt);
            }
        });

        btnSalvar.setText("salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        lblCpf.setText("Cpf: ");

        txtCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCpfActionPerformed(evt);
            }
        });

        tabelaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelaClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaClientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaClientes);

        lblTel.setText("telefone:");

        lblnum.setText("Número:");

        lblEnd.setText("end.:");

        textEnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textEndActionPerformed(evt);
            }
        });

        lblCid.setText("cidade:");

        lblEst.setText("Estado :");

        txtEst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEstActionPerformed(evt);
            }
        });

        btnexc.setText("excluir");
        btnexc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnexcActionPerformed(evt);
            }
        });

        btnAtulizar.setText("atualizar");
        btnAtulizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtulizarActionPerformed(evt);
            }
        });

        btnLimpar.setText("limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        jMenu1.setText("opções");

        opcSair.setText("sair");
        opcSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcSairActionPerformed(evt);
            }
        });
        jMenu1.add(opcSair);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnexc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAtulizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLimpar)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblCpf)
                    .addComponent(lblNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtnome, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTel)
                    .addComponent(lblEnd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(textTel, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                    .addComponent(textEnd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblnum)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCid)
                        .addGap(9, 9, 9)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(textCid, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                    .addComponent(textnum))
                .addGap(18, 18, 18)
                .addComponent(lblEst)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEst, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 832, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNome)
                            .addComponent(txtnome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTel)
                            .addComponent(textTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textnum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblnum))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCpf)
                            .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEnd)
                            .addComponent(textEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCid)
                            .addComponent(textCid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEst)
                            .addComponent(txtEst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar)
                    .addComponent(btnexc)
                    .addComponent(btnAtulizar)
                    .addComponent(btnLimpar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(130, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void opcSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcSairActionPerformed
        int result = JOptionPane.showConfirmDialog(this,"Deseja sair da aplicação?", "Sair",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE);
        if(result == JOptionPane.YES_OPTION){
            System.exit(0);
        }
    }//GEN-LAST:event_opcSairActionPerformed

    private void txtnomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnomeActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
    String nome  =txtnome.getText();
    String cpf = txtCpf.getText();
    String tel = textTel.getText();
    String end = textEnd.getText();
    String num =  textnum.getText();
    String cid =  textCid.getText();
    String est =  txtEst.getText();
    
    if(!isCamposValidos(nome,cpf,tel,end,num,cid,est)){
        JOptionPane.showMessageDialog(null, "falta prencher ", "erro",JOptionPane.INFORMATION_MESSAGE);
        return;
    }
    
    Cliente cliente = new Cliente(nome, Long.parseLong(cpf),Long.parseLong(tel),end, Integer.parseInt(num),cid,est);
    boolean isCadastrado = this.clienteDAO.cadastrar(cliente);
    
    if(isCadastrado){
        modelo.addRow(new Object[]{cliente.getNome(), cliente.getCpf(), cliente.getTel(), cliente.getEnd(), cliente.getNumero(), cliente.getCidade(), cliente.getEstado()});
        limparcampos();
    }else{
        JOptionPane.showMessageDialog(null, "Cliente já cadastrado", "ALERTA",JOptionPane.INFORMATION_MESSAGE);
    }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void txtCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCpfActionPerformed

    private void textEndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textEndActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textEndActionPerformed

    private void txtEstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEstActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEstActionPerformed

    private void btnexcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnexcActionPerformed
    int linhaSelecionada = tabelaClientes.getSelectedRow();
    if(linhaSelecionada >= 0){
        int result = JOptionPane.showConfirmDialog(this,"Deseja excluir ?", "excluir",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE);
        
        if(result == JOptionPane.YES_OPTION){
            
             Long cpf =(Long)tabelaClientes.getValueAt(linhaSelecionada,1);
       this.clienteDAO.excluir(cpf);
       modelo.removeRow(linhaSelecionada);
       
        JOptionPane.showMessageDialog(null, "excluido com sucesso", "excluido!",JOptionPane.INFORMATION_MESSAGE);
        limparcampos();
        }else{
        JOptionPane.showMessageDialog(null, "nenhum cliente excluido", "calelado",JOptionPane.INFORMATION_MESSAGE);

        }        
    }
     
    }//GEN-LAST:event_btnexcActionPerformed

    private void tabelaClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaClientesMouseClicked
       int linhaSelecionada = tabelaClientes.getSelectedRow();
       long cpf =(Long)tabelaClientes.getValueAt(linhaSelecionada,1);
       Cliente cliente= this.clienteDAO.consutar(cpf);
       txtnome.setText(cliente.getNome());
       txtCpf.setText(cliente.getCpf().toString());
       textTel.setText(cliente.getTel().toString());
       textEnd.setText(cliente.getEnd());
       textnum.setText(cliente.getNumero().toString());
       textCid.setText(cliente.getCidade());
       txtEst.setText(cliente.getEstado());
       
    }//GEN-LAST:event_tabelaClientesMouseClicked

    private void btnAtulizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtulizarActionPerformed
    int linhaSelecionada = tabelaClientes.getSelectedRow();
    if(linhaSelecionada >= 0){
     Long cpf =(Long)tabelaClientes.getValueAt(linhaSelecionada,1);
    String nome  =txtnome.getText();
    String tel = textTel.getText();
    String end = textEnd.getText();
    String num =  textnum.getText();
    String cid =  textCid.getText();
    String est =  txtEst.getText();
     if(!isCamposValidos(nome,cpf.toString(),tel,end,num,cid,est)){
        JOptionPane.showMessageDialog(null, "falta prencher ", "erro",JOptionPane.INFORMATION_MESSAGE);
        return;
    }
     
      Cliente clienteN = new Cliente(nome,cpf,Long.parseLong(tel),end,Integer.parseInt(num),cid,est);
      this.clienteDAO.alterar(clienteN);
      
      modelo.removeRow(linhaSelecionada);
      modelo.addRow(new Object[]{clienteN.getNome(), clienteN.getCpf(), clienteN.getTel(), clienteN.getEnd(), clienteN.getNumero(), clienteN.getCidade(), clienteN.getEstado()});
      limparcampos();
      JOptionPane.showMessageDialog(null, "alterado com sucesso", "alterado!",JOptionPane.INFORMATION_MESSAGE);
        limparcampos();
    }else{
    JOptionPane.showMessageDialog(null, "falha na alteração", "erro!",JOptionPane.ERROR_MESSAGE);
    }


    }//GEN-LAST:event_btnAtulizarActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
limparcampos();
            }//GEN-LAST:event_btnLimparActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtulizar;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnexc;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCid;
    private javax.swing.JLabel lblCpf;
    private javax.swing.JLabel lblEnd;
    private javax.swing.JLabel lblEst;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblTel;
    private javax.swing.JLabel lblnum;
    private javax.swing.JMenuItem opcSair;
    private javax.swing.JTable tabelaClientes;
    private javax.swing.JTextField textCid;
    private javax.swing.JTextField textEnd;
    private javax.swing.JTextField textTel;
    private javax.swing.JTextField textnum;
    private javax.swing.JTextField txtCpf;
    private javax.swing.JTextField txtEst;
    private javax.swing.JTextField txtnome;
    // End of variables declaration//GEN-END:variables

    private boolean isCamposValidos(String ...campos) {
      for(String campo : campos){
          if(campos == null || "".equals(campo)){
              return false;
          }
      }
      return true;
    }

    private void initCustomComponents() {
       modelo.addColumn("nome");
       modelo.addColumn("CPF");
       modelo.addColumn("tel");
       modelo.addColumn("end");
       modelo.addColumn("num");
       modelo.addColumn("cid");
       modelo.addColumn("est");
       tabelaClientes.setModel(modelo);
    }

    private void limparcampos() {
    txtnome.setText("");
    txtCpf.setText("");
    textTel.setText("");
    textEnd.setText("");
    textnum.setText("");
    textCid.setText("");
    txtEst.setText("");
    }
}
